{"version":3,"file":"intersection.min.js","sources":["utils/toString.js","utils/isFunction.js","utils/isElement.js","utils/isObject.js","intersection.js"],"sourcesContent":["/**\r\n * Object 对象原型上的 toString 方法\r\n * ========================================================================\r\n * @method toString\r\n * @param {*} val\r\n * @returns {string}\r\n */\r\nconst toString = (val) => {\r\n  return Object.prototype.toString.apply(val)\r\n}\r\n\r\nexport default toString\r\n","import toString from './toString'\r\n\r\n/**\r\n * 检测测试数据是否为 Function 类型\r\n * ========================================================================\r\n * @method isFunction\r\n * @param {*} val - （必须）待检测的数据\r\n * @returns {boolean} 'val' 是 Function 类型返回 true，否则返回 false\r\n */\r\nconst isFunction = (val) => {\r\n  return typeof val === 'function' || toString(val) === '[object Function]'\r\n}\r\n\r\nexport default isFunction\r\n","import isObject from './isObject'\r\n\r\n/**\r\n * 检测数据是否为 HTMLElement DOM 节点\r\n * ========================================================================\r\n * @method isElement\r\n * @param {*} o\r\n * @returns {boolean}\r\n */\r\nconst isElement = (o) => {\r\n  return !!(isObject(o) && o.nodeName && o.tagName && o.nodeType === 1)\r\n}\r\n\r\nexport default isElement\r\n","import toString from './toString'\r\nimport isFunction from './isFunction'\r\n\r\n/**\r\n * 检测数据是否为 Object 类型\r\n * ========================================================================\r\n * @method isObject\r\n * @param {*} o\r\n * @returns {boolean}\r\n */\r\nconst isObject = (o) => {\r\n  return (\r\n    (toString(o) === '[object Object]' ||\r\n      typeof o === 'object' ||\r\n      isFunction(o)) &&\r\n    o !== null\r\n  )\r\n}\r\n\r\nexport default isObject\r\n","import isFunction from './utils/isFunction'\r\nimport isElement from './utils/isElement'\r\n\r\n/**\r\n * 通用的 IntersectionObserver 观察者处理器\r\n * ========================================================================\r\n * @method intersection\r\n * @param {Function} fn\r\n * @param {Object} [props]\r\n * @param {String} [props.selector]\r\n * @param {Object} [props.context]\r\n * @param {Object|HTMLElement} [props.root]\r\n * @param {Number|Array} [props.threshold]\r\n * @param {String} [props.rootMargin]\r\n */\r\nconst intersection = (fn, props = {}) => {\r\n  const root = props.root || null\r\n  const selector = props.selector || '.outline-heading'\r\n  const context = props.context || null\r\n  const threshold = props.threshold || 0\r\n  const rootMargin = props.rootMargin || '0px 0px -90% 0px'\r\n  const options = {\r\n    rootMargin: rootMargin,\r\n    threshold: threshold\r\n  }\r\n  const Observer = new IntersectionObserver((entries) => {\r\n    entries.forEach((entry) => {\r\n      if (entry.intersectionRatio > 0) {\r\n        if (isFunction(fn)) {\r\n          fn.call(context || entry.target, entry.target)\r\n        }\r\n      }\r\n    })\r\n  }, options)\r\n  const $root = isElement(root) ? root : document\r\n\r\n  if (root) {\r\n    options.root = root\r\n  }\r\n\r\n  $root.querySelectorAll(selector).forEach((section) => {\r\n    Observer.observe(section)\r\n  })\r\n}\r\n\r\nexport default intersection\r\n"],"names":["toString","val","Object","prototype","apply","isFunction","isElement","o","isObject","nodeName","tagName","nodeType","fn","props","root","selector","context","threshold","options","rootMargin","Observer","IntersectionObserver","entries","forEach","entry","intersectionRatio","call","target","$root","document","querySelectorAll","section","observe"],"mappings":"6OAOA,MAAMA,EAAYC,GACTC,OAAOC,UAAUH,SAASI,MAAMH,GCCnCI,EAAcJ,GACI,mBAARA,GAAwC,sBAAlBD,EAASC,GCDzCK,EAAaC,MCCF,CAACA,IAEG,oBAAhBP,EAASO,IACK,iBAANA,GACPF,EAAWE,KACP,OAANA,EDLQC,CAASD,IAAMA,EAAEE,UAAYF,EAAEG,SAA0B,IAAfH,EAAEI,gBEKnC,CAACC,EAAIC,EAAQ,MAChC,MAAMC,EAAOD,EAAMC,MAAQ,KACrBC,EAAWF,EAAME,UAAY,mBAC7BC,EAAUH,EAAMG,SAAW,KAC3BC,EAAYJ,EAAMI,WAAa,EAE/BC,EAAU,CACdC,WAFiBN,EAAMM,YAAc,mBAGrCF,UAAWA,GAEPG,EAAW,IAAIC,sBAAsBC,IACzCA,EAAQC,SAASC,IACXA,EAAMC,kBAAoB,GACxBpB,EAAWO,IACbA,EAAGc,KAAKV,GAAWQ,EAAMG,OAAQH,EAAMG,OAE1C,GACD,GACDT,GACGU,EAAQtB,EAAUQ,GAAQA,EAAOe,SAEnCf,IACFI,EAAQJ,KAAOA,GAGjBc,EAAME,iBAAiBf,GAAUQ,SAASQ,IACxCX,EAASY,QAAQD,EAAQ,GACzB"}